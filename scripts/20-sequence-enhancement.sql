-- ================================================================
-- 20-sequence-enhancement.sql
-- ÁîüÁâ©Â∫èÂàóÂàÜÊûêÂ¢ûÂº∫ÔºöSIMD‰ºòÂåñÁöÑÈ´òÊÄßËÉΩËÆ°ÁÆó
-- Âú®ÂéüÊúâSQLÂü∫Á°Ä‰∏äÊ∑ªÂä†RustÈ´òÊÄßËÉΩÂÆûÁé∞
-- ================================================================

-- ================================================================
-- Ê£ÄÊü•ÂíåÂáÜÂ§áRustÂ¢ûÂº∫Êâ©Â±ï
-- ================================================================

-- Ê£ÄÊü•bio_postgres (RustÁîüÁâ©Â∫èÂàóÂ§ÑÁêÜÊâ©Â±ï)
DO $$
DECLARE
    bio_postgres_available BOOLEAN := false;
BEGIN
    -- Ê£ÄÊü•bio_postgresÊâ©Â±ïÊòØÂê¶ÂèØÁî®
    SELECT COUNT(*) > 0 INTO bio_postgres_available
    FROM pg_available_extensions
    WHERE name = 'bio_postgres';

    IF bio_postgres_available THEN
        BEGIN
            CREATE EXTENSION IF NOT EXISTS bio_postgres;
            RAISE NOTICE '‚úÖ Rust bio_postgres extension installed successfully';

            -- Êõ¥Êñ∞Â¢ûÂº∫ÊéßÂà∂Áä∂ÊÄÅ
            UPDATE enhancement_control.feature_enhancements
            SET enhancement_status = 'active',
                last_updated = NOW()
            WHERE feature_name = 'sequence_analysis';

        EXCEPTION WHEN OTHERS THEN
            RAISE NOTICE '‚ö†Ô∏è  bio_postgres available but installation failed: %', SQLERRM;
        END;
    ELSE
        RAISE NOTICE 'üìù bio_postgres not available, using SQL sequence functions only';
    END IF;
END $$;
